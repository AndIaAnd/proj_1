'''
Представьте, что работаете в инспекции Министерства труда США и хотите найти компании, 
которые платят меньше минимальной почасовой ставки, чтобы инициировать расследование.
Подобно голодным псам у дверцы грузовика с мясом, ваши офицеры, 
следящие за соблюдением Закона о справедливых условиях труда (Fair Labor Standards Act, FLSA),
ждут список компаний, нарушающих закон о минимальной зарплате. 
Можете ли вы предоставить им такой список?
функция any() языка Python, принимающая на входе итерируемый объект, например
Поиск компаний, платящих меньше минимальной зарплаты список,
и возвращающая True, если вычисление хотя бы одного элемента этого итерируемого объекта дает True.
'''
print(any([True, False, False, False]))
print(any([2<1, 3+2>5+5, 3-2<0]))
'''
sum([x*x for x in range(20)]) <- список, sum(x*x for x in range(20)) <- генератор(отсуствует списковые [])
'''
# Наши данные представляют собой ассоциативный массив ассоциативных массивов,
# в которых хранятся почасовые ставки работников компаний. 
# Необходимо выделить из него список компаний, 
# платящих по крайней мере одному сотруднику меньше установленной законом минимальной почасовой ставки (< $9)
companies = {
'CoolCompany' : {'Alice' : 33, 'Bob' : 28, 'Frank' : 29},
'CheapCompany' : {'Ann' : 4, 'Lee' : 9, 'Chrisi' : 7},
'SosoCompany' : {'Esther' : 38, 'Cole' : 8, 'Paris' : 18}}
#code 
illegal = [x for x in companies if any(y < 9 for y in companies[x].values())]
#out
print(f"This gues soo bad!: {illegal}")

'''
Первое выражение, y<9 for y in companies[x].values(), генерирует входные данные для функции any().
Для каждого сотрудника оно проверяет, не платят ли ему по почасовой ставке ниже минимальной, y<9. 
Результат представляет собой итерируемый объект значений булева типа. 
Метод values() ассоциативного массива возвращает хранящуюся в нем коллекцию значений. 
Например, выражение companies['CoolCompany'].values() возвращает коллекцию почасовых ставок dict_values([33, 28, 29]).
Если хотя бы одна из них ниже минимальной, то функция any() вернет True, 
а название компании будет сохранено в виде строкового значения в итоговом списке illegal
Второе выражение-генератор представляет собой списковое включение [x for x in companies if any(...)] 
и создает список названий компаний, для которых предыдущий вызов функции any() возвращает True. 
Это и есть компании, платящие своим сотрудникам меньше минимальной почасовой ставки
'''
