'''
На сей раз мы работаем над маленьким программным проектом для больницы. 
Наша задача — мониторинг и визуализация статистики состояния здоровья пациентов путем отслеживания
их сердечных циклов. Благодаря построению графиков данных сердечных циклов мы помогаем докторам
и пациентам отслеживать возможные отклонения от этого цикла. Например, 
при заданном ряде измерений отдельного сердечного цикла, 
хранящихся в списке [62, 60, 62, 64, 68, 77, 80, 76, 71, 66, 61, 60, 62],
необходимо получить визуализацию. 
Проблема состоит в том, что первое и второе значения данных в нашем списке избыточны: [62, 60, 62, 64, 68, 77, 80, 76, 71, 66, 61, 60, 62]. 
Это удобно при построении графика одного сердечного цикла в качестве указания на то,
что был визуализирован один полный цикл. Однако необходимо избавиться от этих избыточных данных,
чтобы наши ожидаемые сердечные циклы не выглядели так,
при копировании одного и того же сердечного цикла.
Ясно, что нужно очистить исходный список, 
удалив из него избыточные два первых и два последних значения данных, 
то есть список [62, 60, 62, 64, 68, 77, 80, 76, 71, 66, 61, 60, 62] 
превращается в [60, 62, 64, 68, 77, 80, 76, 71, 66, 61].
Можно воспользоваться срезами в сочетании с новой возможностью Python — 
конкатенацией списков (list concatenation), создающей новый список путем конкатенации
(то есть соединения) существующих списков. Например, операция [1, 2, 3] + [4, 5] 
создает новый список [1, 2, 3, 4, 5], не заменяя при этом существующие. 
При этом можно выполнить операцию * для многократной конкатенации одного и того же списка: 
например, операция [1, 2, 3] * 3 создает новый список [1, 2, 3, 1, 2, 3, 1, 2, 3].
'''
import matplotlib.pyplot as plt

### data
cardiac_cycle = [62, 60, 62, 64, 68, 77, 80, 76, 71, 66, 61, 60, 62]
### logic
expected_cycle = cardiac_cycle[1:-2] * 10
### out
plt.plot(expected_cycle)
plt.show()
''' 
Приведенный код работает в два этапа. 
Во-первых, мы очищаем данные с помощью среза с отрицательным аргументом конца, равным –2,
чтобы срез включал в себя все элементы до правого конца, за исключением двух последних избыточных значений. 
Во-вторых, мы выполняем конкатенацию полученных значений данных десять раз с помощью оператора повтора *. 
В результате получаем список из 10 × 10 = 100 целых чисел,
состоящих из конкатенаций данных о сердечной деятельности
'''
